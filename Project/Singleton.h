/******************************************************************************/
/*! @file       Singleton.h
    @brief      シングルトンクラス定義ファイル
*******************************************************************************/

#ifndef SINGLETON_H
#define SINGLETON_H

namespace Editor
{

    /******************************************************************************/
    /*! @class CSingleton
        @brief  シングルトンクラス
    *******************************************************************************/
    template < typename T >
    class CSingleton
    {
    private:
        /*! コピー、ムーブコンストラクタの削除 */
        CSingleton(const CSingleton&) = delete;
        CSingleton(CSingleton&&) = delete;

    protected:

        /******************************************************************************/
        /*! コンストラクタ
        *******************************************************************************/
        CSingleton() {}

        /******************************************************************************/
        /*! デストラクタ
        *******************************************************************************/
        virtual ~CSingleton() {}

    public:

        /******************************************************************************/
        /*! シングルトン用のアクセスポイント定義
         *  この関数内でインスタンス化され、外部から参照できる
            @return         インスタンス
        *******************************************************************************/
        static T& GetInstance()
        {
            static T obj;
            return obj;
        }
    };
}

#endif //SINGLETON_H
