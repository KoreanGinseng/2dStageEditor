#pragma once
#include "EditorDefine.h"

namespace Editor
{

    // ********************************************************************************
    /// <summary>
    /// アニメーションデータクラス
    /// </summary>
    // ********************************************************************************
    class CAnimationData
    {
    private:

        /// <summary>画像</summary>
        TexturePtr     m_Texture;

        /// <summary>アニメーションデータ</summary>
        CSpriteMotionController m_Animation;

    public:

        // ********************************************************************************
        /// <summary>
        /// コンストラクタ
        /// </summary>
        // ********************************************************************************
        CAnimationData();
        
        // ********************************************************************************
        /// <summary>
        /// デストラクタ
        /// </summary>
        // ********************************************************************************
        ~CAnimationData();

        // ********************************************************************************
        /// <summary>
        /// アニメーションデータの読み込み
        /// </summary>
        /// <param name="fileName">ファイルパス</param>
        /// <returns>TRUE　成功、それ以外　失敗</returns>
        // ********************************************************************************
        MofBool Load(LPCMofChar fileName);

        // ********************************************************************************
        /// <summary>
        /// 画像の読み込み
        /// </summary>
        /// <param name="fileName">ファイルパス</param>
        /// <returns>TRUE　成功、それ以外　失敗</returns>
        // ********************************************************************************
        MofBool LoadTexture(LPCMofChar fileName);

        // ********************************************************************************
        /// <summary>
        /// アニメーションの生成
        /// </summary>
        /// <param name="anim">アニメーション配列</param>
        /// <param name="count">アニメーション数</param>
        /// <returns>TRUE　成功、それ以外　失敗</returns>
        // ********************************************************************************
        MofBool Create(SpriteAnimationCreate* anim, MofS32 count);

        // ********************************************************************************
        /// <summary>
        /// アニメーションの更新
        /// </summary>
        /// <returns>TRUE　成功、それ以外　失敗</returns>
        // ********************************************************************************
        MofBool Update();

        // ********************************************************************************
        /// <summary>
        /// アニメーションの描画
        /// </summary>
        /// <param name="x">座標X</param>
        /// <param name="y">座標Y</param>
        /// <returns>TRUE　成功、それ以外　失敗</returns>
        // ********************************************************************************
        MofBool Render(MofFloat x, MofFloat y);

        // ********************************************************************************
        /// <summary>
        /// 解放
        /// </summary>
        /// <returns>TRUE　成功、それ以外　失敗</returns>
        // ********************************************************************************
        MofBool Release();

        // ********************************************************************************
        /// <summary>
        /// 画像の取得
        /// </summary>
        /// <returns>画像</returns>
        // ********************************************************************************
        TexturePtr GetTexture() const noexcept
        {
            return m_Texture;
        }
    };
}

