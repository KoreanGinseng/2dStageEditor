#pragma once
#include "EditorDefine.h"

namespace Editor
{

	// ********************************************************************************
	/// <summary>
	/// マップデータクラス
	/// </summary>
	// ********************************************************************************
	class CMapData
	{
	private:

		MapData m_MapData;

	public:
		
		// ********************************************************************************
		/// <summary>
		/// コンストラクタ
		/// </summary>
		// ********************************************************************************
		CMapData() = default;
		
		// ********************************************************************************
		/// <summary>
		/// デストラクタ
		/// </summary>
		// ********************************************************************************
		~CMapData() = default;

		// ********************************************************************************
		/// <summary>
		/// データ配列の再設定
		/// </summary>
		/// <returns>TRUE : 成功, それ以外 : 失敗</returns>
		// ********************************************************************************
		MofBool ResetData();

		// ********************************************************************************
		/// <summary>
		/// データアクセス用
		/// </summary>
		/// <param name="y">縦番号</param>
		/// <returns>横配列</returns>
		// ********************************************************************************
		std::vector<MofU32>& operator[](MofS32 y)
		{
			return m_MapData[y];
		}

		// ********************************************************************************
		/// <summary>
		/// データアクセス用
		/// </summary>
		/// <param name="y">縦番号</param>
		/// <returns>横配列</returns>
		// ********************************************************************************
		const std::vector<MofU32>& operator[](MofS32 y) const 
		{
			return m_MapData[y];
		}

		// ********************************************************************************
		/// <summary>
		/// データアクセス用
		/// </summary>
		/// <param name="x">横番号</param>
		/// <param name="y">縦番号</param>
		/// <returns>データ</returns>
		// ********************************************************************************
		const MofU32 Get(MofS32 x, MofS32 y) const 
		{
			return m_MapData[y][x];
		}

		// ********************************************************************************
		/// <summary>
		/// データアクセス用
		/// </summary>
		/// <param name="x">横番号</param>
		/// <param name="y">縦番号</param>
		/// <returns>データ</returns>
		// ********************************************************************************
		MofU32& Get(MofS32 x, MofS32 y) 
		{
			return m_MapData[y][x];
		}
	};
}

