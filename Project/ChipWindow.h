#pragma once
#include "EditorDefine.h"

namespace Editor
{

    // ********************************************************************************
    /// <summary>
    /// チップウィンドウ
    /// </summary>
    // ********************************************************************************
    class CChipWindow
    {
    private:

        std::vector<std::string> m_NameArray;
        
        TextureArray m_TextureArray;

        TextureArray m_TargetArray;

        TexturePtr m_DummyTarget;

        Vector2 m_Scroll;

        Vector2 m_WindowPos;

        MofS32 m_SelectNo;

    public:

        // ********************************************************************************
        /// <summary>
        /// コンストラクタ
        /// </summary>
        // ********************************************************************************
        CChipWindow();
        
        // ********************************************************************************
        /// <summary>
        /// デストラクタ
        /// </summary>
        // ********************************************************************************
        ~CChipWindow();

        // ********************************************************************************
        /// <summary>
        /// 初期化
        /// </summary>
        /// <returns>TRUE 成功, それ以外 失敗</returns>
        // ********************************************************************************
        MofBool Initialize();

        // ********************************************************************************
        /// <summary>
        /// ダミーターゲットの作成
        /// </summary>
        /// <returns>TRUE 成功, それ以外 失敗</returns>
        // ********************************************************************************
        MofBool DummyCreate();

        // ********************************************************************************
        /// <summary>
        /// 読み込み
        /// </summary>
        /// <param name="path">ファイルパス</param>
        /// <returns>TRUE 成功, それ以外 失敗</returns>
        // ********************************************************************************
        MofBool Load(LPCMofChar path);

        // ********************************************************************************
        /// <summary>
        /// 更新
        /// </summary>
        /// <returns>TRUE 成功, それ以外 失敗</returns>
        // ********************************************************************************
        MofBool Update();

        // ********************************************************************************
        /// <summary>
        /// 描画
        /// </summary>
        /// <returns>TRUE 成功, それ以外 失敗</returns>
        // ********************************************************************************
        MofBool Render();

        // ********************************************************************************
        /// <summary>
        /// 解放
        /// </summary>
        /// <returns>TRUE 成功, それ以外 失敗</returns>
        // ********************************************************************************
        MofBool Release();

        // ********************************************************************************
        /// <summary>
        /// 画像配列の取得
        /// </summary>
        /// <returns>画像配列</returns>
        // ********************************************************************************
        const TextureArray& GetTextureArray() const noexcept
        {
            return m_TextureArray;
        }

        // ********************************************************************************
        /// <summary>
        /// 画像名の取得
        /// </summary>
        /// <returns>画像名配列</returns>
        // ********************************************************************************
        const std::vector<std::string>& GetTextureNameArray() const noexcept
        {
            return m_NameArray;
        }
    };
}

